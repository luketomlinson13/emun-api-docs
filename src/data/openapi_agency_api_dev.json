{
  "swagger": "2.0",
  "info": {
    "title": "EMUN1 Data Integration",
    "version": "1.0"
  },
  "host": "emun1-agency-sandbox.ws.emuncloud.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/PurgeProductKitComponents": {
      "post": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Kit Component"
        ],
        "summary": "Deletes all product kit components associated with the currently authenticated vendor/manufacturer.",
        "description": "Deletes all product kit components associated with the currently authenticated vendor/manufacturer.",
        "operationId": "PurgeProductKitComponents_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PurgeProductKitComponents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/PurgeProducts": {
      "post": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Products"
        ],
        "summary": "Deletes all products associated with the currently authenticated vendor/manufacturer.",
        "description": "Deletes all products associated with the currently authenticated vendor/manufacturer.",
        "operationId": "PurgeProducts_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PurgeProducts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/PurgeProductTags": {
      "post": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Product Tag"
        ],
        "summary": "Deletes all product tags associated with the currently authenticated vendor/manufacturer.",
        "description": "Deletes all product tags associated with the currently authenticated vendor/manufacturer.",
        "operationId": "PurgeProductTags_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PurgeProductTags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/PurgeVendorResources": {
      "post": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Vendors",
          "SubParent:Vendor Resources"
        ],
        "summary": "Deletes all products, kit components, product tags associated with the currently authenticated vendor/manufacturer.",
        "description": "Deletes all products, kit components, product tags associated with the currently authenticated vendor/manufacturer.",
        "operationId": "PurgeVendorResources_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PurgeVendorResources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/GetOrders": {
      "get": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Orders",
          "SubParent:Orders"
        ],
        "summary": "Pull vendor/manufacturer orders from EMUN1. This will pull any order the authenticated user has access to based on query parameters they pass in.",
        "description": "Pull vendor/manufacturer orders from EMUN1. This will pull any order the authenticated user has access to based on query parameters they pass in.",
        "operationId": "QueryOrders_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "OrderSequenceGreaterThan",
            "in": "query",
            "type": "string"
          },
          {
            "name": "OrderNumber",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Skip",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Take",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "OrderByDesc",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Include",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Fields",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Meta",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/QueryResponse_Order_"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/SaveKitComponent": {
      "post": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Kit Component"
        ],
        "summary": "Write a KitComponent record",
        "description": "Write a KitComponent record",
        "operationId": "SaveKitComponent_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Kit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Component",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Quantity",
            "in": "query",
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          {
            "name": "SalesPrice",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "VendorKitID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "VendorID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SaveKitComponent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/SaveProduct": {
      "post": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Products"
        ],
        "summary": "Write a Product record",
        "description": "Write a Product record",
        "operationId": "SaveProduct_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ProductId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "VendorSku",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ProductName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "UpcCode",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ItemStatus",
            "in": "query",
            "type": "string"
          },
          {
            "name": "UnitMeasure",
            "in": "query",
            "type": "string"
          },
          {
            "name": "SalesPrice",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak1",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak1Price",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak2",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak2Price",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak3",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak3Price",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "Category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "MinimumOrderQty",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "PurchaseIncrement",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "SubCategory",
            "in": "query",
            "type": "string"
          },
          {
            "name": "UnitsInStock",
            "in": "query",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Sellable",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "ItemType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "DefaultShipDate",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "NextAvailableDate",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "CaseQty",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "KitExplodeOnOrder",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "QtyAvailable",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "NonDiscountable",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "VendorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "PersonalizationMaxNumLines",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "MaxCharacters",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "B2BSellable",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "B2CSellable",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "ProductTags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "KitEditable",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "NewIntroduction",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "ListPrice",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "x-nullable": false
          },
          {
            "name": "MSRP",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SaveProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/SaveProductTag": {
      "post": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Product Tag"
        ],
        "summary": "Write a ProductTag record",
        "description": "Write a ProductTag record",
        "operationId": "SaveProductTag_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ProductID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "TagName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "TagValue",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Position",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Generated",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "VendorProductID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "VendorID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SaveProductTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/SaveKitComponent/{Id}": {
      "put": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Kit Component"
        ],
        "summary": "Write a KitComponent record",
        "description": "Write a KitComponent record",
        "operationId": "UpdateKitComponentId_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Kit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Component",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Quantity",
            "in": "query",
            "type": "number",
            "format": "double",
            "x-nullable": false
          },
          {
            "name": "SalesPrice",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "VendorKitID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "VendorID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateKitComponent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/UpdateOrderDownloaded/{OrderNumber}": {
      "put": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Orders",
          "SubParent:Order Downloaded"
        ],
        "summary": "Write a OrderDownloaded record",
        "description": "Write a OrderDownloaded record",
        "operationId": "UpdateOrderDownloadedOrderNumber_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "OrderNumber",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Downloaded",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "DateTimeDownloaded",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateOrderDownloaded"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/SaveProduct/{ProductId}": {
      "put": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Products"
        ],
        "summary": "Write a Product record",
        "description": "Write a Product record",
        "operationId": "UpdateProductProductId_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ProductId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "VendorSku",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ProductName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "UpcCode",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ItemStatus",
            "in": "query",
            "type": "string"
          },
          {
            "name": "UnitMeasure",
            "in": "query",
            "type": "string"
          },
          {
            "name": "SalesPrice",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak1",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak1Price",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak2",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak2Price",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak3",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "QtyBreak3Price",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "Category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "MinimumOrderQty",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "PurchaseIncrement",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "SubCategory",
            "in": "query",
            "type": "string"
          },
          {
            "name": "UnitsInStock",
            "in": "query",
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Sellable",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "ItemType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "DefaultShipDate",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "NextAvailableDate",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "CaseQty",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "KitExplodeOnOrder",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "QtyAvailable",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "NonDiscountable",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "VendorId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "PersonalizationMaxNumLines",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "MaxCharacters",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "B2BSellable",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "B2CSellable",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "ProductTags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "KitEditable",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "NewIntroduction",
            "in": "query",
            "type": "boolean",
            "x-nullable": false
          },
          {
            "name": "ListPrice",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "CreatedOn",
            "in": "query",
            "type": "string",
            "format": "date-time",
            "x-nullable": false
          },
          {
            "name": "MSRP",
            "in": "query",
            "type": "number",
            "format": "double"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SaveProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/SaveProductTag/{Id}": {
      "put": {
        "tags": [
          "EMUN1-Agency-API",
          "Parent:Products",
          "SubParent:Product Tag"
        ],
        "summary": "Write a ProductTag record",
        "description": "Write a ProductTag record",
        "operationId": "UpdateProductTagId_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "ProductID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "TagName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "TagValue",
            "in": "query",
            "type": "string"
          },
          {
            "name": "Position",
            "in": "query",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Generated",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "VendorProductID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "VendorID",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UpdateProductTag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Object": {
      "properties": {},
      "description": "Object",
      "type": "object"
    },
    "PurgeProductKitComponents": {
      "title": "PurgeProductKitComponents",
      "properties": {},
      "description": "Deletes all product kit components associated with the currently authenticated vendor/manufacturer.",
      "type": "object"
    },
    "PurgeProducts": {
      "title": "PurgeProducts",
      "properties": {},
      "description": "Deletes all products associated with the currently authenticated vendor/manufacturer.",
      "type": "object"
    },
    "PurgeProductTags": {
      "title": "PurgeProductTags",
      "properties": {},
      "description": "Deletes all product tags associated with the currently authenticated vendor/manufacturer.",
      "type": "object"
    },
    "PurgeVendorResources": {
      "title": "PurgeVendorResources",
      "properties": {},
      "description": "Deletes all products, kit components, product tags associated with the currently authenticated vendor/manufacturer.",
      "type": "object"
    },
    "QueryOrders": {
      "title": "QueryOrders",
      "properties": {
        "Search": {
          "description": "You can search by Order Number, PO Number, Order Name, CustomerID, Company Name, Ship Name, or Buyer",
          "type": "string"
        },
        "OrderSequenceGreaterThan": {
          "description": "You can search where OrderSequenceGreaterThan",
          "type": "string"
        },
        "OrderNumber": {
          "description": "You can search by Distinct Order Number only",
          "type": "string"
        },
        "Skip": {
          "type": "integer",
          "format": "int32"
        },
        "Take": {
          "type": "integer",
          "format": "int32"
        },
        "OrderBy": {
          "type": "string"
        },
        "OrderByDesc": {
          "type": "string"
        },
        "Include": {
          "type": "string"
        },
        "Fields": {
          "type": "string"
        },
        "Meta": {
          "$ref": "#/definitions/Dictionary_String_String_"
        }
      },
      "description": "Pull vendor/manufacturer orders from EMUN1. This will pull any order the authenticated user has access to based on query parameters they pass in.",
      "type": "object"
    },
    "Dictionary_String_String_": {
      "title": "Dictionary<String,String>",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Dictionary<String,String>",
      "type": "object"
    },
    "CreateKitComponent": {
      "title": "CreateKitComponent",
      "properties": {
        "Id": {
          "description": "The unique identifier of a kit component. This is a composite key that EMUN API creates and it is not required.",
          "type": "string"
        },
        "Kit": {
          "description": "The kit number",
          "type": "string"
        },
        "Component": {
          "description": "The component of the kit",
          "type": "string"
        },
        "Quantity": {
          "description": "The quantity for component in the kit",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "SalesPrice": {
          "description": "The price of the component in the kit. Only populate if the price is different from the master product price.",
          "type": "number",
          "format": "double"
        },
        "VendorKitID": {
          "description": "The SKU of the kit. This should match the SKU number in product master",
          "type": "string"
        },
        "VendorID": {
          "description": "The vendor ID of the kit. This is a unique identifier for the vendor and will be provided to the vendor by EMUN",
          "type": "string"
        }
      },
      "description": "Write a KitComponent record",
      "type": "object"
    },
    "SaveKitComponent": {
      "title": "SaveKitComponent",
      "properties": {
        "Id": {
          "description": "The unique identifier of a kit component. This is a composite key that EMUN API creates and it is not required.",
          "type": "string"
        },
        "Kit": {
          "description": "The kit number",
          "type": "string"
        },
        "Component": {
          "description": "The component of the kit",
          "type": "string"
        },
        "Quantity": {
          "description": "The quantity for component in the kit",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "SalesPrice": {
          "description": "The price of the component in the kit. Only populate if the price is different from the master product price.",
          "type": "number",
          "format": "double"
        },
        "VendorKitID": {
          "description": "The SKU of the kit. This should match the SKU number in product master",
          "type": "string"
        },
        "VendorID": {
          "description": "The vendor ID of the kit. This is a unique identifier for the vendor and will be provided to the vendor by EMUN",
          "type": "string"
        }
      },
      "description": "Write a KitComponent record",
      "type": "object"
    },
    "SaveProduct": {
      "title": "SaveProduct",
      "properties": {
        "ProductId": {
          "description": "The unique identifier for the product",
          "type": "string"
        },
        "VendorSku": {
          "description": "The vendor Sku number of the product",
          "type": "string"
        },
        "ProductName": {
          "description": "The short description of the product",
          "type": "string"
        },
        "Description": {
          "description": "The additional verbose description of the product",
          "type": "string"
        },
        "UpcCode": {
          "description": "The UPC code of the product",
          "type": "string"
        },
        "ItemStatus": {
          "description": "The status of the product. Active or Inactive",
          "type": "string"
        },
        "UnitMeasure": {
          "description": "The unit of measure for the product",
          "type": "string"
        },
        "SalesPrice": {
          "description": "The current price of the product",
          "type": "number",
          "format": "double"
        },
        "QtyBreak1": {
          "description": "The discount level 1 for the product",
          "type": "number",
          "format": "double"
        },
        "QtyBreak1Price": {
          "description": "The sales price level 1 of the product",
          "type": "number",
          "format": "double"
        },
        "QtyBreak2": {
          "description": "The discount level 2 for the product",
          "type": "number",
          "format": "double"
        },
        "QtyBreak2Price": {
          "description": "The sales price level 2 of the product",
          "type": "number",
          "format": "double"
        },
        "QtyBreak3": {
          "description": "The discount level 3 for the product",
          "type": "number",
          "format": "double"
        },
        "QtyBreak3Price": {
          "description": "The sales price level 3 of the product",
          "type": "number",
          "format": "double"
        },
        "Category": {
          "description": "The category of the product",
          "type": "string"
        },
        "MinimumOrderQty": {
          "description": "The minimum order quantity of the product",
          "type": "number",
          "format": "double"
        },
        "PurchaseIncrement": {
          "description": "The purchase increment of the product",
          "type": "number",
          "format": "double"
        },
        "SubCategory": {
          "description": "The sub-category of the product",
          "type": "string"
        },
        "UnitsInStock": {
          "description": "The number of units in stock. Defaulted from QtyAvailable",
          "type": "integer",
          "format": "int64"
        },
        "Sellable": {
          "description": "Indicates if the product is sellable",
          "type": "boolean"
        },
        "ItemType": {
          "description": "The type of the product",
          "type": "string"
        },
        "DefaultShipDate": {
          "description": "The default ship date of the product. The item will default to this ship date if populated.",
          "type": "string",
          "format": "date-time"
        },
        "NextAvailableDate": {
          "description": "The next available date of the product",
          "type": "string",
          "format": "date-time"
        },
        "CaseQty": {
          "description": "The case quantity of the product",
          "type": "number",
          "format": "double"
        },
        "KitExplodeOnOrder": {
          "description": "Indicates if the kit components explode to the order. If true each component is added as a separate line item on the order. If false, the kit is treated as a single item on the order.",
          "type": "boolean"
        },
        "QtyAvailable": {
          "description": "The quantity available for the product",
          "type": "number",
          "format": "double"
        },
        "NonDiscountable": {
          "description": "Indicates if the product is non-discountable. If true this item will not receive any additional discounts",
          "type": "boolean",
          "x-nullable": false
        },
        "VendorId": {
          "description": "The vendor ID of the product. This is a unique identifier for the vendor and will be provided to the vendor by EMUN",
          "type": "string"
        },
        "PersonalizationMaxNumLines": {
          "description": "The maximum number of lines for personalization or notes on the product",
          "type": "integer",
          "format": "int32"
        },
        "MaxCharacters": {
          "description": "The maximum number of characters for personalization",
          "type": "integer",
          "format": "int32"
        },
        "B2BSellable": {
          "description": "Indicates if the product is sellable in a B2B context",
          "type": "boolean",
          "x-nullable": false
        },
        "B2CSellable": {
          "description": "Indicates if the product is sellable in a B2C context",
          "type": "boolean",
          "x-nullable": false
        },
        "ProductTags": {
          "description": "Tags associated with the product",
          "type": "string"
        },
        "KitEditable": {
          "description": "Indicates if the kit is editable. If true the components are exploded to the order and qty's can be edited. If not editable, the component qty's cannot be modified",
          "type": "boolean",
          "x-nullable": false
        },
        "NewIntroduction": {
          "description": "Indicates if the product is a new introduction",
          "type": "boolean",
          "x-nullable": false
        },
        "ListPrice": {
          "description": "The list price of the product",
          "type": "number",
          "format": "double"
        },
        "CreatedOn": {
          "description": "The creation date or intro date of the product",
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "MSRP": {
          "description": "The MSRP price of the product",
          "type": "number",
          "format": "double"
        }
      },
      "description": "Write a Product record",
      "type": "object"
    },
    "CreateProductTag": {
      "title": "CreateProductTag",
      "properties": {
        "Id": {
          "description": "The unique identifier of a product tag.",
          "type": "string"
        },
        "ProductID": {
          "description": "The SKU or unique identifier of a product.",
          "type": "string"
        },
        "TagName": {
          "description": "The category of tag associated with a product.",
          "type": "string"
        },
        "TagValue": {
          "description": "The value of the tag associated with the tag name.",
          "type": "string"
        },
        "Position": {
          "description": "The position or order of a product tag within its category.",
          "type": "integer",
          "format": "int32"
        },
        "Generated": {
          "description": "A boolean indicating whether the product tag was automatically generated.",
          "type": "boolean"
        },
        "VendorProductID": {
          "description": "The vendor product/SKU id",
          "type": "string"
        },
        "VendorID": {
          "description": "This is a unique identifier for the vendor and will be provided to the vendor by EMUN",
          "type": "string"
        }
      },
      "description": "Write a ProductTag record",
      "type": "object"
    },
    "SaveProductTag": {
      "title": "SaveProductTag",
      "properties": {
        "Id": {
          "description": "The unique identifier of a product tag.",
          "type": "string"
        },
        "ProductID": {
          "description": "The SKU or unique identifier of a product.",
          "type": "string"
        },
        "TagName": {
          "description": "The category of tag associated with a product.",
          "type": "string"
        },
        "TagValue": {
          "description": "The value of the tag associated with the tag name.",
          "type": "string"
        },
        "Position": {
          "description": "The position or order of a product tag within its category.",
          "type": "integer",
          "format": "int32"
        },
        "Generated": {
          "description": "A boolean indicating whether the product tag was automatically generated.",
          "type": "boolean"
        },
        "VendorProductID": {
          "description": "The vendor product/SKU id",
          "type": "string"
        },
        "VendorID": {
          "description": "This is a unique identifier for the vendor and will be provided to the vendor by EMUN",
          "type": "string"
        }
      },
      "description": "Write a ProductTag record",
      "type": "object"
    },
    "UpdateKitComponent": {
      "title": "UpdateKitComponent",
      "properties": {
        "Id": {
          "description": "The unique identifier of a kit component. This is a composite key that EMUN API creates and it is not required.",
          "type": "string"
        },
        "Kit": {
          "description": "The kit number",
          "type": "string"
        },
        "Component": {
          "description": "The component of the kit",
          "type": "string"
        },
        "Quantity": {
          "description": "The quantity for component in the kit",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "SalesPrice": {
          "description": "The price of the component in the kit. Only populate if the price is different from the master product price.",
          "type": "number",
          "format": "double"
        },
        "VendorKitID": {
          "description": "The SKU of the kit. This should match the SKU number in product master",
          "type": "string"
        },
        "VendorID": {
          "description": "The vendor ID of the kit. This is a unique identifier for the vendor and will be provided to the vendor by EMUN",
          "type": "string"
        }
      },
      "description": "Write a KitComponent record",
      "type": "object"
    },
    "UpdateOrderDownloaded": {
      "title": "UpdateOrderDownloaded",
      "properties": {
        "OrderNumber": {
          "description": "The unique identifier for the order",
          "type": "string"
        },
        "Downloaded": {
          "description": "The downloaded flag of the order",
          "type": "boolean"
        },
        "DateTimeDownloaded": {
          "description": "UTC date time record was pulled via API",
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Write a OrderDownloaded record",
      "type": "object"
    },
    "UpdateProductTag": {
      "title": "UpdateProductTag",
      "properties": {
        "Id": {
          "description": "The unique identifier of a product tag.",
          "type": "string"
        },
        "ProductID": {
          "description": "The SKU or unique identifier of a product.",
          "type": "string"
        },
        "TagName": {
          "description": "The category of tag associated with a product.",
          "type": "string"
        },
        "TagValue": {
          "description": "The value of the tag associated with the tag name.",
          "type": "string"
        },
        "Position": {
          "description": "The position or order of a product tag within its category.",
          "type": "integer",
          "format": "int32"
        },
        "Generated": {
          "description": "A boolean indicating whether the product tag was automatically generated.",
          "type": "boolean"
        },
        "VendorProductID": {
          "description": "The vendor product/SKU id",
          "type": "string"
        },
        "VendorID": {
          "description": "This is a unique identifier for the vendor and will be provided to the vendor by EMUN",
          "type": "string"
        }
      },
      "description": "Write a ProductTag record",
      "type": "object"
    },
    "QueryResponse_Order_": {
      "title": "QueryResponse`1",
      "properties": {
        "Offset": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "Total": {
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "Results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        },
        "Meta": {
          "$ref": "#/definitions/Dictionary_String_String_"
        },
        "ResponseStatus": {
          "$ref": "#/definitions/ResponseStatus"
        }
      },
      "description": "QueryResponse<Order>",
      "type": "object"
    },
    "Order": {
      "title": "Order",
      "properties": {
        "Id": {
          "description": "The unique order number assigned to the sales order.",
          "type": "string"
        },
        "CustomerId": {
          "description": "The internal customer ID for the order.",
          "type": "string"
        },
        "VendorCustomerId": {
          "description": "The customer ID used by the vendor for this retailer.",
          "type": "string"
        },
        "CompanyName": {
          "description": "The company name of the customer placing the order.",
          "type": "string"
        },
        "Buyer": {
          "description": "The buyer name of the customer placing the order.",
          "type": "string"
        },
        "RetailerEmail": {
          "description": "Email address associated with the customer.",
          "type": "string"
        },
        "PONumber": {
          "description": "Customer-provided purchase order number.",
          "type": "string"
        },
        "Status": {
          "description": "The current status of the order (e.g., Open, Shipped, Cancelled).",
          "type": "string"
        },
        "VendorId": {
          "description": "The ID of the vendor or manufacturer for this order. This is the vendor id in the EMUN1 platform.",
          "type": "string"
        },
        "VendorName": {
          "description": "The name of the vendor associated with the order.",
          "type": "string"
        },
        "ReviewReason": {
          "description": "Reason the order was flagged for review, if applicable.",
          "type": "string"
        },
        "TransactionType": {
          "description": "The transaction type, such as Regular Order or Return. This will always be 'Order' for Agency sales orders.",
          "type": "string"
        },
        "SalesRepID": {
          "description": "The ID of the sales representative responsible for the order. This is the Agency rep id.",
          "type": "string"
        },
        "RepName": {
          "description": "The name of the sales representative responsible for the order.",
          "type": "string"
        },
        "WritingRepID": {
          "description": "The ID of the writing sales representative responsible for the order.",
          "type": "string"
        },
        "WritingRepName": {
          "description": "The name of the writing sales representative responsible for the order.",
          "type": "string"
        },
        "OrderDate": {
          "description": "The date the order was placed.",
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "ShipDate": {
          "description": "The requeseted ship date for the order.",
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "ExportedDate": {
          "description": "The date and time the order was exported or downloaded by manufacturer.",
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "OrderTotal": {
          "description": "The total value of the order.",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "OrderDiscount": {
          "description": "The discount percent off order.",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "PriceList": {
          "description": "The price list associated with the order.",
          "type": "string"
        },
        "Source": {
          "description": "The source or channel through which the order was placed. Road, Show, Web, Phone, etc.",
          "type": "string"
        },
        "GeneratedFrom": {
          "description": "The EMUN1 application through which the order was placed.",
          "type": "string"
        },
        "Notes": {
          "description": "Notes associated with the order.",
          "type": "string"
        },
        "ShipId": {
          "description": "The internal ID of the shipping address.",
          "type": "string"
        },
        "VendorShipId": {
          "description": "The vendor's identifier for the shipping location.",
          "type": "string"
        },
        "ShippingMethod": {
          "description": "The shipping method selected for the order.",
          "type": "string"
        },
        "ShippingLocationAddress": {
          "description": "Shipping address line 1.",
          "type": "string"
        },
        "ShippingLocationAddress2": {
          "description": "Shipping address line 2.",
          "type": "string"
        },
        "ShippingLocationCity": {
          "description": "City of the shipping address.",
          "type": "string"
        },
        "ShippingLocationState": {
          "description": "State of the shipping address.",
          "type": "string"
        },
        "ShippingLocationZip": {
          "description": "ZIP code of the shipping address.",
          "type": "string"
        },
        "ShippingLocationCountry": {
          "description": "Country of the shipping address.",
          "type": "string"
        },
        "ShippingLocationPhone": {
          "description": "Phone number associated with the shipping address.",
          "type": "string"
        },
        "ShippingLocationName": {
          "description": "Recipient name for the shipment.",
          "type": "string"
        },
        "BillAddress": {
          "description": "Billing address line 1.",
          "type": "string"
        },
        "BillAddress2": {
          "description": "Billing address line 2.",
          "type": "string"
        },
        "BillCity": {
          "description": "City of the billing address.",
          "type": "string"
        },
        "BillState": {
          "description": "State of the billing address.",
          "type": "string"
        },
        "BillZip": {
          "description": "ZIP code of the billing address.",
          "type": "string"
        },
        "BillCountry": {
          "description": "Country of the billing address.",
          "type": "string"
        },
        "BillPhone": {
          "description": "Phone number for billing inquiries.",
          "type": "string"
        },
        "PaymentTerms": {
          "description": "Payment terms for the order (e.g., Net 30).",
          "type": "string"
        },
        "VendorPaymentTerms": {
          "description": "The vendor-specific code for the payment terms.",
          "type": "string"
        },
        "CreditCardType": {
          "description": "The type of credit card used for payment.",
          "type": "string"
        },
        "CreditCardToken": {
          "description": "Token representing the credit card used.",
          "type": "string"
        },
        "CreditCardTransactionId": {
          "description": "Transaction ID returned from the payment gateway.",
          "type": "string"
        },
        "CreditCardLastFour": {
          "description": "Last 4 numbers of credit card.",
          "type": "string"
        },
        "CreditCardExpiration": {
          "description": "Credit Card expiration.",
          "type": "string"
        },
        "OrderName": {
          "description": "The name applied to the order. This is an identifier the order taker can give the order (spring, easter, christmas, etc).",
          "type": "string"
        },
        "Active": {
          "description": "Indicates whether the order is active.",
          "type": "boolean",
          "x-nullable": false
        },
        "Downloaded": {
          "description": "Indicates whether the order has been exported.",
          "type": "boolean",
          "x-nullable": false
        },
        "AllowBackOrders": {
          "description": "Indicates whether the customer allows backorders.",
          "type": "boolean",
          "x-nullable": false
        },
        "Lines": {
          "description": "List of order lines included in the sales order.",
          "type": "List<OrderLine>",
          "items": {
            "$ref": "#/definitions/OrderLine"
          }
        }
      },
      "description": "Order",
      "type": "object"
    },
    "OrderLine": {
      "title": "OrderLine",
      "properties": {
        "OrderNumber": {
          "description": "Order number that this line item is associated with.",
          "type": "string"
        },
        "Position": {
          "description": "Position of the item on the order.",
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "AgencyProductId": {
          "description": "Product ID used internally or by the agency.",
          "type": "string"
        },
        "VendorProductId": {
          "description": "Product ID formatted for vendor use (derived by removing vendor prefix).",
          "type": "string"
        },
        "Description": {
          "description": "Description of the product on the order line.",
          "type": "string"
        },
        "QtyPurchased": {
          "description": "Quantity of product ordered.",
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "Price": {
          "description": "Sales price for the product on this line.",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "ListPrice": {
          "description": "List price for the product on this line.",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "ExtendedTotal": {
          "description": "Extended total amount for this line (Qty x Price). This total includes discounts applied at the line level.",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "LineDiscount": {
          "description": "Line-level discount applied to this item.",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "PromoDiscount": {
          "description": "Promotional discount applied to this item.",
          "type": "number",
          "format": "double",
          "x-nullable": false
        },
        "LineNotes": {
          "description": "Line notes.",
          "type": "string"
        },
        "Comments": {
          "description": "Line comments, name drops, personalization are stored here.",
          "type": "string"
        },
        "PromoCode1": {
          "description": "First promotional code applied.",
          "type": "string"
        },
        "PromoCode2": {
          "description": "Second promotional code applied.",
          "type": "string"
        },
        "ShipDate": {
          "description": "Requested ship date for this line item.",
          "type": "string",
          "format": "date-time"
        },
        "CancelDate": {
          "description": "Cancel date for this line item.",
          "type": "string",
          "format": "date-time"
        },
        "EnteredOnDate": {
          "description": "Date this line item was entered.",
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "KitComponent": {
          "description": "Indicates if this line is a component of a kit.",
          "type": "boolean",
          "x-nullable": false
        },
        "KitComponentParentPosition": {
          "description": "Parent position number if this line is part of a kit. This represents the position of the kit item in the order.",
          "type": "integer",
          "format": "int32",
          "x-nullable": false
        },
        "Active": {
          "description": "Indicates whether the order line is active.",
          "type": "boolean",
          "x-nullable": false
        },
        "XmlOptions": {
          "description": "Serialized options or configuration for the product.",
          "type": "string"
        },
        "VendorId": {
          "description": "The ID of the vendor or manufacturer for this order. This is the vendor id in the EMUN1 platform",
          "type": "string"
        }
      },
      "description": "OrderLine",
      "type": "object"
    },
    "ResponseStatus": {
      "title": "ResponseStatus",
      "properties": {
        "ErrorCode": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "StackTrace": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseError"
          }
        },
        "Meta": {
          "$ref": "#/definitions/Dictionary_String_String_"
        }
      },
      "description": "ResponseStatus",
      "type": "object"
    },
    "ResponseError": {
      "title": "ResponseError",
      "properties": {
        "ErrorCode": {
          "type": "string"
        },
        "FieldName": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "Meta": {
          "$ref": "#/definitions/Dictionary_String_String_"
        }
      },
      "description": "ResponseError",
      "type": "object"
    },
    "IdResponse": {
      "title": "IdResponse",
      "properties": {
        "Id": {
          "type": "string"
        },
        "ResponseStatus": {
          "$ref": "#/definitions/ResponseStatus"
        }
      },
      "description": "IdResponse",
      "type": "object"
    }
  },
  "parameters": {
    "Accept": {
      "name": "Accept",
      "in": "header",
      "description": "Accept Header",
      "type": "string",
      "required": true,
      "enum": [
        "application/json"
      ]
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "EMUN1-Agency-API"
    }
  ]
}